#!/usr/bin/env node

var path = require("path"),
	fs = require('fs'),
	streetsweeper = require('../streetsweeper'),
	optimist = require('optimist'),
	csv = require('csv');

var argv = optimist
    .usage("Usage: $0 -c [num] [filename]")
    .options("o", {
      alias: "out",
      describe: "output csv file name",
      default: "/dev/stdout",
    })
    .options("c", {
   	  alias: "column",
   	  describe: "column number containing address data"
    })
    .check(function(argv) {
      if (!argv._.length) throw new Error("input required");
    })
    .argv;

if (argv.help) return optimist.showHelp();

var inputFile = qualify(argv._);

if (argv['o'] === '/dev/stdout') {
	csv()
		.from.path(inputFile.path[0], { delimiter: ',' })
		.on('record', function(row, index) {
			row[argv['c']] = streetsweeper.sweep(row[argv['c']]);
			console.log(row.join(','));
		});
} else {
	var outputFile = qualify(argv['o']);

	csv()
		.from.path(inputFile.path[0], { delimiter: ', ' })
		.to.stream(fs.createWriteStream(outputFile.path))
		.transform(function(row) {
			row[argv['c']] = streetsweeper.sweep(row[argv['c']]);
			return row;
		});
}

// Borrowed from Mike Bostock's TopoJSON https://github.com/mbostock/topojson/blob/master/bin/topojson
function qualify(file) {
  var i = file.indexOf("=");
  return {
    name: i >= 0 ? file.substring(0, i) : path.basename(file, path.extname(file)),
    path: i >= 0 ? file.substring(i + 1) : file
  };
}